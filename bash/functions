#! /bin/bash
# "MetaGit" - a command for using git on the .git folder of the current git repo
mgit() {
        (
                gitroot="$(git rev-parse --show-toplevel)"
                [ $? == 0 ] || {
                        echo "MetaGit can only be run inside a Git repo, exiting."
                        exit
                }
                cd "$gitroot/.git"
                git "$@"
        )
}

# short git commit
acp() {
        git add -A :/
        if [ -n "$1" ]; then
                git commit -m "$1"
        else
                git commit "quick backup"
        fi
        git push origin master
}

explore() {
        if [ -z "$1" ]; then
                /bin/cygstart --explore `pwd`
        else
                /bin/cygstart --explore $@
        fi
}

function nonono() {
        while true; do
                printf "no "
                sleep 1
        done
}

function DoctorNo() {
        while true; do
                echo "Ask me anything?"
                read;
                echo "No."
        done
}

function termcolors() {
	for clbg in {40..47} {100..107} 49 ; do
		#Foreground
		for clfg in {30..37} {90..97} 39 ; do
			#Formatting
			for attr in 0 1 2 4 5 7 ; do
				#Print the result
				echo -en "\e[${attr};${clbg};${clfg}m ^[${attr};${clbg};${clfg}m \e[0m"
			done
			echo #Newline
		done
	done
}

# lazy open
function a() {
        if [ -d "$*" ]; then
                cd "$*"
                return
        fi
        vim "$*"
}

# lazy git
function g() {
       command=`_g $@`
       echo $command
       echo `$command`
}

function _g() {
        if [ "$*" == "a" ]; then
                echo git add -A :/
                return
        fi

        if [ "$1" == "a" ]; then
                echo git add ${@:2}
                return
        fi

        if [ "$*" == "c" ]; then
                echo "git commit -m 'quick backup'"
                return
        fi

        if [ "$1" == "c" ]; then
                echo "git commit -m '${*:2}'"
        fi

        if [ "$*" == "d" ]; then
                echo git diff
                return
        fi

        if [ "$*" == "p" ]; then
                echo git push --all
                return
        fi

        if [ "$1" == "p" ]; then
                echo git push ${@:2}
                return
        fi

        if [ "$*" == "s" ]; then
                echo git status
                return
        fi

        echo git $@
}
